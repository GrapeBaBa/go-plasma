// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package deep

import (
	"encoding/json"
	"errors"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*anchorTransactionMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (a AnchorTransaction) MarshalJSON() ([]byte, error) {
	type AnchorTransaction struct {
		BlockChainID hexutil.Uint64 `json:"blockchainID"    gencodec:"required"`
		BlockNumber  hexutil.Uint64 `json:"blocknumber"     gencodec:"required"`
		BlockHash    *common.Hash   `json:"blockhash"       gencodec:"required"`
		Extra        Ownership      `json:"extra"`
		Sig          hexutil.Bytes  `json:"sig"             gencodec:"required"`
	}
	var enc AnchorTransaction
	enc.BlockChainID = hexutil.Uint64(a.BlockChainID)
	enc.BlockNumber = hexutil.Uint64(a.BlockNumber)
	enc.BlockHash = a.BlockHash
	enc.Extra = a.Extra
	enc.Sig = a.Sig
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (a *AnchorTransaction) UnmarshalJSON(input []byte) error {
	type AnchorTransaction struct {
		BlockChainID *hexutil.Uint64 `json:"blockchainID"    gencodec:"required"`
		BlockNumber  *hexutil.Uint64 `json:"blocknumber"     gencodec:"required"`
		BlockHash    *common.Hash    `json:"blockhash"       gencodec:"required"`
		Extra        *Ownership      `json:"extra"`
		Sig          *hexutil.Bytes  `json:"sig"             gencodec:"required"`
	}
	var dec AnchorTransaction
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.BlockChainID == nil {
		return errors.New("missing required field 'blockchainID' for AnchorTransaction")
	}
	a.BlockChainID = uint64(*dec.BlockChainID)
	if dec.BlockNumber == nil {
		return errors.New("missing required field 'blocknumber' for AnchorTransaction")
	}
	a.BlockNumber = uint64(*dec.BlockNumber)
	if dec.BlockHash == nil {
		return errors.New("missing required field 'blockhash' for AnchorTransaction")
	}
	a.BlockHash = dec.BlockHash
	if dec.Extra != nil {
		a.Extra = *dec.Extra
	}
	if dec.Sig == nil {
		return errors.New("missing required field 'sig' for AnchorTransaction")
	}
	a.Sig = *dec.Sig
	return nil
}
